#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace curtmfg
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CurtDev")]
	public partial class CurtDevDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertMenu_SiteContent(Menu_SiteContent instance);
    partial void UpdateMenu_SiteContent(Menu_SiteContent instance);
    partial void DeleteMenu_SiteContent(Menu_SiteContent instance);
    partial void InsertSiteContentRevision(SiteContentRevision instance);
    partial void UpdateSiteContentRevision(SiteContentRevision instance);
    partial void DeleteSiteContentRevision(SiteContentRevision instance);
    partial void InsertContactReceiver(ContactReceiver instance);
    partial void UpdateContactReceiver(ContactReceiver instance);
    partial void DeleteContactReceiver(ContactReceiver instance);
    partial void InsertFAQ(FAQ instance);
    partial void UpdateFAQ(FAQ instance);
    partial void DeleteFAQ(FAQ instance);
    partial void InsertNewsItem(NewsItem instance);
    partial void UpdateNewsItem(NewsItem instance);
    partial void DeleteNewsItem(NewsItem instance);
    partial void InsertBlogPost_BlogCategory(BlogPost_BlogCategory instance);
    partial void UpdateBlogPost_BlogCategory(BlogPost_BlogCategory instance);
    partial void DeleteBlogPost_BlogCategory(BlogPost_BlogCategory instance);
    partial void InsertBlogPost(BlogPost instance);
    partial void UpdateBlogPost(BlogPost instance);
    partial void DeleteBlogPost(BlogPost instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertBlogCategory(BlogCategory instance);
    partial void UpdateBlogCategory(BlogCategory instance);
    partial void DeleteBlogCategory(BlogCategory instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertCustomerLocation(CustomerLocation instance);
    partial void UpdateCustomerLocation(CustomerLocation instance);
    partial void DeleteCustomerLocation(CustomerLocation instance);
    partial void InsertSiteContent(SiteContent instance);
    partial void UpdateSiteContent(SiteContent instance);
    partial void DeleteSiteContent(SiteContent instance);
    partial void InsertBusinessClass(BusinessClass instance);
    partial void UpdateBusinessClass(BusinessClass instance);
    partial void DeleteBusinessClass(BusinessClass instance);
    partial void InsertContactType(ContactType instance);
    partial void UpdateContactType(ContactType instance);
    partial void DeleteContactType(ContactType instance);
    partial void InsertContactReceiver_ContactType(ContactReceiver_ContactType instance);
    partial void UpdateContactReceiver_ContactType(ContactReceiver_ContactType instance);
    partial void DeleteContactReceiver_ContactType(ContactReceiver_ContactType instance);
    partial void InsertTestimonial(Testimonial instance);
    partial void UpdateTestimonial(Testimonial instance);
    partial void DeleteTestimonial(Testimonial instance);
    partial void InsertDealerType(DealerType instance);
    partial void UpdateDealerType(DealerType instance);
    partial void DeleteDealerType(DealerType instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertLifestyle_Trailer(Lifestyle_Trailer instance);
    partial void UpdateLifestyle_Trailer(Lifestyle_Trailer instance);
    partial void DeleteLifestyle_Trailer(Lifestyle_Trailer instance);
    partial void InsertTrailer(Trailer instance);
    partial void UpdateTrailer(Trailer instance);
    partial void DeleteTrailer(Trailer instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    partial void InsertIPBlock(IPBlock instance);
    partial void UpdateIPBlock(IPBlock instance);
    partial void DeleteIPBlock(IPBlock instance);
    partial void InsertForumGroup(ForumGroup instance);
    partial void UpdateForumGroup(ForumGroup instance);
    partial void DeleteForumGroup(ForumGroup instance);
    partial void InsertForumTopic(ForumTopic instance);
    partial void UpdateForumTopic(ForumTopic instance);
    partial void DeleteForumTopic(ForumTopic instance);
    partial void InsertForumPost(ForumPost instance);
    partial void UpdateForumPost(ForumPost instance);
    partial void DeleteForumPost(ForumPost instance);
    partial void InsertForumThread(ForumThread instance);
    partial void UpdateForumThread(ForumThread instance);
    partial void DeleteForumThread(ForumThread instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertTwitterLog(TwitterLog instance);
    partial void UpdateTwitterLog(TwitterLog instance);
    partial void DeleteTwitterLog(TwitterLog instance);
    partial void InsertTweet(Tweet instance);
    partial void UpdateTweet(Tweet instance);
    partial void DeleteTweet(Tweet instance);
    partial void InsertDealerTier(DealerTier instance);
    partial void UpdateDealerTier(DealerTier instance);
    partial void DeleteDealerTier(DealerTier instance);
    partial void InsertMapIcon(MapIcon instance);
    partial void UpdateMapIcon(MapIcon instance);
    partial void DeleteMapIcon(MapIcon instance);
    partial void InsertMapPolygon(MapPolygon instance);
    partial void UpdateMapPolygon(MapPolygon instance);
    partial void DeleteMapPolygon(MapPolygon instance);
    partial void InsertMapPolygonCoordinate(MapPolygonCoordinate instance);
    partial void UpdateMapPolygonCoordinate(MapPolygonCoordinate instance);
    partial void DeleteMapPolygonCoordinate(MapPolygonCoordinate instance);
    #endregion
		
		public CurtDevDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CurtDevConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CurtDevDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurtDevDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurtDevDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurtDevDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<ColorCode> ColorCodes
		{
			get
			{
				return this.GetTable<ColorCode>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<Menu_SiteContent> Menu_SiteContents
		{
			get
			{
				return this.GetTable<Menu_SiteContent>();
			}
		}
		
		public System.Data.Linq.Table<SiteContentRevision> SiteContentRevisions
		{
			get
			{
				return this.GetTable<SiteContentRevision>();
			}
		}
		
		public System.Data.Linq.Table<ContactReceiver> ContactReceivers
		{
			get
			{
				return this.GetTable<ContactReceiver>();
			}
		}
		
		public System.Data.Linq.Table<FAQ> FAQs
		{
			get
			{
				return this.GetTable<FAQ>();
			}
		}
		
		public System.Data.Linq.Table<NewsItem> NewsItems
		{
			get
			{
				return this.GetTable<NewsItem>();
			}
		}
		
		public System.Data.Linq.Table<BlogPost_BlogCategory> BlogPost_BlogCategories
		{
			get
			{
				return this.GetTable<BlogPost_BlogCategory>();
			}
		}
		
		public System.Data.Linq.Table<BlogPost> BlogPosts
		{
			get
			{
				return this.GetTable<BlogPost>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<BlogCategory> BlogCategories
		{
			get
			{
				return this.GetTable<BlogCategory>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<CustomerLocation> CustomerLocations
		{
			get
			{
				return this.GetTable<CustomerLocation>();
			}
		}
		
		public System.Data.Linq.Table<SiteContent> SiteContents
		{
			get
			{
				return this.GetTable<SiteContent>();
			}
		}
		
		public System.Data.Linq.Table<BusinessClass> BusinessClasses
		{
			get
			{
				return this.GetTable<BusinessClass>();
			}
		}
		
		public System.Data.Linq.Table<ContactType> ContactTypes
		{
			get
			{
				return this.GetTable<ContactType>();
			}
		}
		
		public System.Data.Linq.Table<ContactReceiver_ContactType> ContactReceiver_ContactTypes
		{
			get
			{
				return this.GetTable<ContactReceiver_ContactType>();
			}
		}
		
		public System.Data.Linq.Table<Testimonial> Testimonials
		{
			get
			{
				return this.GetTable<Testimonial>();
			}
		}
		
		public System.Data.Linq.Table<DealerType> DealerTypes
		{
			get
			{
				return this.GetTable<DealerType>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Lifestyle_Trailer> Lifestyle_Trailers
		{
			get
			{
				return this.GetTable<Lifestyle_Trailer>();
			}
		}
		
		public System.Data.Linq.Table<Trailer> Trailers
		{
			get
			{
				return this.GetTable<Trailer>();
			}
		}
		
		public System.Data.Linq.Table<Video> Videos
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
		
		public System.Data.Linq.Table<IPBlock> IPBlocks
		{
			get
			{
				return this.GetTable<IPBlock>();
			}
		}
		
		public System.Data.Linq.Table<ForumGroup> ForumGroups
		{
			get
			{
				return this.GetTable<ForumGroup>();
			}
		}
		
		public System.Data.Linq.Table<ForumTopic> ForumTopics
		{
			get
			{
				return this.GetTable<ForumTopic>();
			}
		}
		
		public System.Data.Linq.Table<ForumPost> ForumPosts
		{
			get
			{
				return this.GetTable<ForumPost>();
			}
		}
		
		public System.Data.Linq.Table<ForumThread> ForumThreads
		{
			get
			{
				return this.GetTable<ForumThread>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<TwitterLog> TwitterLogs
		{
			get
			{
				return this.GetTable<TwitterLog>();
			}
		}
		
		public System.Data.Linq.Table<Tweet> Tweets
		{
			get
			{
				return this.GetTable<Tweet>();
			}
		}
		
		public System.Data.Linq.Table<DealerTier> DealerTiers
		{
			get
			{
				return this.GetTable<DealerTier>();
			}
		}
		
		public System.Data.Linq.Table<MapIcon> MapIcons
		{
			get
			{
				return this.GetTable<MapIcon>();
			}
		}
		
		public System.Data.Linq.Table<MapPolygon> MapPolygons
		{
			get
			{
				return this.GetTable<MapPolygon>();
			}
		}
		
		public System.Data.Linq.Table<MapPolygonCoordinate> MapPolygonCoordinates
		{
			get
			{
				return this.GetTable<MapPolygonCoordinate>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catID;
		
		private System.Nullable<System.DateTime> _dateAdded;
		
		private int _parentID;
		
		private string _catTitle;
		
		private string _shortDesc;
		
		private string _longDesc;
		
		private string _image;
		
		private int _isLifestyle;
		
		private int _codeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncatIDChanging(int value);
    partial void OncatIDChanged();
    partial void OndateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OndateAddedChanged();
    partial void OnparentIDChanging(int value);
    partial void OnparentIDChanged();
    partial void OncatTitleChanging(string value);
    partial void OncatTitleChanged();
    partial void OnshortDescChanging(string value);
    partial void OnshortDescChanged();
    partial void OnlongDescChanging(string value);
    partial void OnlongDescChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnisLifestyleChanging(int value);
    partial void OnisLifestyleChanged();
    partial void OncodeIDChanging(int value);
    partial void OncodeIDChanged();
    #endregion
		
		public Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catID
		{
			get
			{
				return this._catID;
			}
			set
			{
				if ((this._catID != value))
				{
					this.OncatIDChanging(value);
					this.SendPropertyChanging();
					this._catID = value;
					this.SendPropertyChanged("catID");
					this.OncatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int NOT NULL")]
		public int parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catTitle", DbType="VarChar(100)")]
		public string catTitle
		{
			get
			{
				return this._catTitle;
			}
			set
			{
				if ((this._catTitle != value))
				{
					this.OncatTitleChanging(value);
					this.SendPropertyChanging();
					this._catTitle = value;
					this.SendPropertyChanged("catTitle");
					this.OncatTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDesc", DbType="VarChar(255)")]
		public string shortDesc
		{
			get
			{
				return this._shortDesc;
			}
			set
			{
				if ((this._shortDesc != value))
				{
					this.OnshortDescChanging(value);
					this.SendPropertyChanging();
					this._shortDesc = value;
					this.SendPropertyChanged("shortDesc");
					this.OnshortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longDesc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string longDesc
		{
			get
			{
				return this._longDesc;
			}
			set
			{
				if ((this._longDesc != value))
				{
					this.OnlongDescChanging(value);
					this.SendPropertyChanging();
					this._longDesc = value;
					this.SendPropertyChanged("longDesc");
					this.OnlongDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLifestyle", DbType="Int NOT NULL")]
		public int isLifestyle
		{
			get
			{
				return this._isLifestyle;
			}
			set
			{
				if ((this._isLifestyle != value))
				{
					this.OnisLifestyleChanging(value);
					this.SendPropertyChanging();
					this._isLifestyle = value;
					this.SendPropertyChanged("isLifestyle");
					this.OnisLifestyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeID", DbType="Int NOT NULL")]
		public int codeID
		{
			get
			{
				return this._codeID;
			}
			set
			{
				if ((this._codeID != value))
				{
					this.OncodeIDChanging(value);
					this.SendPropertyChanging();
					this._codeID = value;
					this.SendPropertyChanged("codeID");
					this.OncodeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColorCode")]
	public partial class ColorCode
	{
		
		private int _codeID;
		
		private string _code;
		
		private string _font;
		
		public ColorCode()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int codeID
		{
			get
			{
				return this._codeID;
			}
			set
			{
				if ((this._codeID != value))
				{
					this._codeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(100)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this._code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_font", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string font
		{
			get
			{
				return this._font;
			}
			set
			{
				if ((this._font != value))
				{
					this._font = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _menuID;
		
		private string _menu_name;
		
		private bool _isPrimary;
		
		private bool _active;
		
		private string _display_name;
		
		private bool _requireAuthentication;
		
		private bool _showOnSitemap;
		
		private int _sort;
		
		private EntitySet<Menu_SiteContent> _Menu_SiteContents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmenuIDChanging(int value);
    partial void OnmenuIDChanged();
    partial void Onmenu_nameChanging(string value);
    partial void Onmenu_nameChanged();
    partial void OnisPrimaryChanging(bool value);
    partial void OnisPrimaryChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Ondisplay_nameChanging(string value);
    partial void Ondisplay_nameChanged();
    partial void OnrequireAuthenticationChanging(bool value);
    partial void OnrequireAuthenticationChanged();
    partial void OnshowOnSitemapChanging(bool value);
    partial void OnshowOnSitemapChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    #endregion
		
		public Menu()
		{
			this._Menu_SiteContents = new EntitySet<Menu_SiteContent>(new Action<Menu_SiteContent>(this.attach_Menu_SiteContents), new Action<Menu_SiteContent>(this.detach_Menu_SiteContents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int menuID
		{
			get
			{
				return this._menuID;
			}
			set
			{
				if ((this._menuID != value))
				{
					this.OnmenuIDChanging(value);
					this.SendPropertyChanging();
					this._menuID = value;
					this.SendPropertyChanged("menuID");
					this.OnmenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string menu_name
		{
			get
			{
				return this._menu_name;
			}
			set
			{
				if ((this._menu_name != value))
				{
					this.Onmenu_nameChanging(value);
					this.SendPropertyChanging();
					this._menu_name = value;
					this.SendPropertyChanged("menu_name");
					this.Onmenu_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimary", DbType="Bit NOT NULL")]
		public bool isPrimary
		{
			get
			{
				return this._isPrimary;
			}
			set
			{
				if ((this._isPrimary != value))
				{
					this.OnisPrimaryChanging(value);
					this.SendPropertyChanging();
					this._isPrimary = value;
					this.SendPropertyChanged("isPrimary");
					this.OnisPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display_name", DbType="VarChar(255) NULL")]
		public string display_name
		{
			get
			{
				return this._display_name;
			}
			set
			{
				if ((this._display_name != value))
				{
					this.Ondisplay_nameChanging(value);
					this.SendPropertyChanging();
					this._display_name = value;
					this.SendPropertyChanged("display_name");
					this.Ondisplay_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requireAuthentication", DbType="Bit NOT NULL")]
		public bool requireAuthentication
		{
			get
			{
				return this._requireAuthentication;
			}
			set
			{
				if ((this._requireAuthentication != value))
				{
					this.OnrequireAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._requireAuthentication = value;
					this.SendPropertyChanged("requireAuthentication");
					this.OnrequireAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showOnSitemap", DbType="Bit NOT NULL")]
		public bool showOnSitemap
		{
			get
			{
				return this._showOnSitemap;
			}
			set
			{
				if ((this._showOnSitemap != value))
				{
					this.OnshowOnSitemapChanging(value);
					this.SendPropertyChanging();
					this._showOnSitemap = value;
					this.SendPropertyChanged("showOnSitemap");
					this.OnshowOnSitemapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu_SiteContent", Storage="_Menu_SiteContents", ThisKey="menuID", OtherKey="menuID")]
		public EntitySet<Menu_SiteContent> Menu_SiteContents
		{
			get
			{
				return this._Menu_SiteContents;
			}
			set
			{
				this._Menu_SiteContents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menu_SiteContents(Menu_SiteContent entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_Menu_SiteContents(Menu_SiteContent entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu_SiteContent")]
	public partial class Menu_SiteContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _menuContentID;
		
		private int _menuID;
		
		private System.Nullable<int> _contentID;
		
		private int _menuSort;
		
		private string _menuTitle;
		
		private string _menuLink;
		
		private System.Nullable<int> _parentID;
		
		private EntitySet<Menu_SiteContent> _Menu_SiteContents;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<Menu_SiteContent> _Menu_SiteContent1;
		
		private EntityRef<SiteContent> _SiteContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmenuContentIDChanging(int value);
    partial void OnmenuContentIDChanged();
    partial void OnmenuIDChanging(int value);
    partial void OnmenuIDChanged();
    partial void OncontentIDChanging(System.Nullable<int> value);
    partial void OncontentIDChanged();
    partial void OnmenuSortChanging(int value);
    partial void OnmenuSortChanged();
    partial void OnmenuTitleChanging(string value);
    partial void OnmenuTitleChanged();
    partial void OnmenuLinkChanging(string value);
    partial void OnmenuLinkChanged();
    partial void OnparentIDChanging(System.Nullable<int> value);
    partial void OnparentIDChanged();
    #endregion
		
		public Menu_SiteContent()
		{
			this._Menu_SiteContents = new EntitySet<Menu_SiteContent>(new Action<Menu_SiteContent>(this.attach_Menu_SiteContents), new Action<Menu_SiteContent>(this.detach_Menu_SiteContents));
			this._Menu = default(EntityRef<Menu>);
			this._Menu_SiteContent1 = default(EntityRef<Menu_SiteContent>);
			this._SiteContent = default(EntityRef<SiteContent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menuContentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int menuContentID
		{
			get
			{
				return this._menuContentID;
			}
			set
			{
				if ((this._menuContentID != value))
				{
					this.OnmenuContentIDChanging(value);
					this.SendPropertyChanging();
					this._menuContentID = value;
					this.SendPropertyChanged("menuContentID");
					this.OnmenuContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menuID", DbType="Int NOT NULL")]
		public int menuID
		{
			get
			{
				return this._menuID;
			}
			set
			{
				if ((this._menuID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmenuIDChanging(value);
					this.SendPropertyChanging();
					this._menuID = value;
					this.SendPropertyChanged("menuID");
					this.OnmenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentID", DbType="Int")]
		public System.Nullable<int> contentID
		{
			get
			{
				return this._contentID;
			}
			set
			{
				if ((this._contentID != value))
				{
					if (this._SiteContent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontentIDChanging(value);
					this.SendPropertyChanging();
					this._contentID = value;
					this.SendPropertyChanged("contentID");
					this.OncontentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menuSort", DbType="Int NOT NULL")]
		public int menuSort
		{
			get
			{
				return this._menuSort;
			}
			set
			{
				if ((this._menuSort != value))
				{
					this.OnmenuSortChanging(value);
					this.SendPropertyChanging();
					this._menuSort = value;
					this.SendPropertyChanged("menuSort");
					this.OnmenuSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menuTitle", DbType="VarChar(255)")]
		public string menuTitle
		{
			get
			{
				return this._menuTitle;
			}
			set
			{
				if ((this._menuTitle != value))
				{
					this.OnmenuTitleChanging(value);
					this.SendPropertyChanging();
					this._menuTitle = value;
					this.SendPropertyChanged("menuTitle");
					this.OnmenuTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menuLink", DbType="VarChar(500)")]
		public string menuLink
		{
			get
			{
				return this._menuLink;
			}
			set
			{
				if ((this._menuLink != value))
				{
					this.OnmenuLinkChanging(value);
					this.SendPropertyChanging();
					this._menuLink = value;
					this.SendPropertyChanged("menuLink");
					this.OnmenuLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int")]
		public System.Nullable<int> parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					if (this._Menu_SiteContent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_SiteContent_Menu_SiteContent", Storage="_Menu_SiteContents", ThisKey="menuContentID", OtherKey="parentID")]
		public EntitySet<Menu_SiteContent> Menu_SiteContents
		{
			get
			{
				return this._Menu_SiteContents;
			}
			set
			{
				this._Menu_SiteContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu_SiteContent", Storage="_Menu", ThisKey="menuID", OtherKey="menuID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.Menu_SiteContents.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.Menu_SiteContents.Add(this);
						this._menuID = value.menuID;
					}
					else
					{
						this._menuID = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_SiteContent_Menu_SiteContent", Storage="_Menu_SiteContent1", ThisKey="parentID", OtherKey="menuContentID", IsForeignKey=true)]
		public Menu_SiteContent Menu_SiteContent1
		{
			get
			{
				return this._Menu_SiteContent1.Entity;
			}
			set
			{
				Menu_SiteContent previousValue = this._Menu_SiteContent1.Entity;
				if (((previousValue != value) 
							|| (this._Menu_SiteContent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu_SiteContent1.Entity = null;
						previousValue.Menu_SiteContents.Remove(this);
					}
					this._Menu_SiteContent1.Entity = value;
					if ((value != null))
					{
						value.Menu_SiteContents.Add(this);
						this._parentID = value.menuContentID;
					}
					else
					{
						this._parentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu_SiteContent1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteContent_Menu_SiteContent", Storage="_SiteContent", ThisKey="contentID", OtherKey="contentID", IsForeignKey=true)]
		public SiteContent SiteContent
		{
			get
			{
				return this._SiteContent.Entity;
			}
			set
			{
				SiteContent previousValue = this._SiteContent.Entity;
				if (((previousValue != value) 
							|| (this._SiteContent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SiteContent.Entity = null;
						previousValue.Menu_SiteContents.Remove(this);
					}
					this._SiteContent.Entity = value;
					if ((value != null))
					{
						value.Menu_SiteContents.Add(this);
						this._contentID = value.contentID;
					}
					else
					{
						this._contentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SiteContent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menu_SiteContents(Menu_SiteContent entity)
		{
			this.SendPropertyChanging();
			entity.Menu_SiteContent1 = this;
		}
		
		private void detach_Menu_SiteContents(Menu_SiteContent entity)
		{
			this.SendPropertyChanging();
			entity.Menu_SiteContent1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteContentRevision")]
	public partial class SiteContentRevision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _revisionID;
		
		private int _contentID;
		
		private string _content_text;
		
		private System.DateTime _createdOn;
		
		private System.Nullable<bool> _active;
		
		private EntityRef<SiteContent> _SiteContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrevisionIDChanging(int value);
    partial void OnrevisionIDChanged();
    partial void OncontentIDChanging(int value);
    partial void OncontentIDChanged();
    partial void Oncontent_textChanging(string value);
    partial void Oncontent_textChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public SiteContentRevision()
		{
			this._SiteContent = default(EntityRef<SiteContent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_revisionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int revisionID
		{
			get
			{
				return this._revisionID;
			}
			set
			{
				if ((this._revisionID != value))
				{
					this.OnrevisionIDChanging(value);
					this.SendPropertyChanging();
					this._revisionID = value;
					this.SendPropertyChanged("revisionID");
					this.OnrevisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentID", DbType="Int NOT NULL")]
		public int contentID
		{
			get
			{
				return this._contentID;
			}
			set
			{
				if ((this._contentID != value))
				{
					if (this._SiteContent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontentIDChanging(value);
					this.SendPropertyChanging();
					this._contentID = value;
					this.SendPropertyChanged("contentID");
					this.OncontentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string content_text
		{
			get
			{
				return this._content_text;
			}
			set
			{
				if ((this._content_text != value))
				{
					this.Oncontent_textChanging(value);
					this.SendPropertyChanging();
					this._content_text = value;
					this.SendPropertyChanged("content_text");
					this.Oncontent_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteContent_SiteContentRevision", Storage="_SiteContent", ThisKey="contentID", OtherKey="contentID", IsForeignKey=true)]
		public SiteContent SiteContent
		{
			get
			{
				return this._SiteContent.Entity;
			}
			set
			{
				SiteContent previousValue = this._SiteContent.Entity;
				if (((previousValue != value) 
							|| (this._SiteContent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SiteContent.Entity = null;
						previousValue.SiteContentRevisions.Remove(this);
					}
					this._SiteContent.Entity = value;
					if ((value != null))
					{
						value.SiteContentRevisions.Add(this);
						this._contentID = value.contentID;
					}
					else
					{
						this._contentID = default(int);
					}
					this.SendPropertyChanged("SiteContent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactReceiver")]
	public partial class ContactReceiver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contactReceiverID;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _email;
		
		private EntitySet<ContactReceiver_ContactType> _ContactReceiver_ContactTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactReceiverIDChanging(int value);
    partial void OncontactReceiverIDChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public ContactReceiver()
		{
			this._ContactReceiver_ContactTypes = new EntitySet<ContactReceiver_ContactType>(new Action<ContactReceiver_ContactType>(this.attach_ContactReceiver_ContactTypes), new Action<ContactReceiver_ContactType>(this.detach_ContactReceiver_ContactTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactReceiverID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contactReceiverID
		{
			get
			{
				return this._contactReceiverID;
			}
			set
			{
				if ((this._contactReceiverID != value))
				{
					this.OncontactReceiverIDChanging(value);
					this.SendPropertyChanging();
					this._contactReceiverID = value;
					this.SendPropertyChanged("contactReceiverID");
					this.OncontactReceiverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(255)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(255)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactReceiver_ContactReceiver_ContactType", Storage="_ContactReceiver_ContactTypes", ThisKey="contactReceiverID", OtherKey="contactReceiverID")]
		public EntitySet<ContactReceiver_ContactType> ContactReceiver_ContactTypes
		{
			get
			{
				return this._ContactReceiver_ContactTypes;
			}
			set
			{
				this._ContactReceiver_ContactTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactReceiver_ContactTypes(ContactReceiver_ContactType entity)
		{
			this.SendPropertyChanging();
			entity.ContactReceiver = this;
		}
		
		private void detach_ContactReceiver_ContactTypes(ContactReceiver_ContactType entity)
		{
			this.SendPropertyChanging();
			entity.ContactReceiver = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FAQ")]
	public partial class FAQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _faqID;
		
		private string _question;
		
		private string _answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfaqIDChanging(int value);
    partial void OnfaqIDChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    #endregion
		
		public FAQ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faqID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int faqID
		{
			get
			{
				return this._faqID;
			}
			set
			{
				if ((this._faqID != value))
				{
					this.OnfaqIDChanging(value);
					this.SendPropertyChanging();
					this._faqID = value;
					this.SendPropertyChanged("faqID");
					this.OnfaqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="VarChar(500)")]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsItem")]
	public partial class NewsItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _newsItemID;
		
		private string _title;
		
		private string _lead;
		
		private string _content;
		
		private System.Nullable<System.DateTime> _publishStart;
		
		private System.Nullable<System.DateTime> _publishEnd;
		
		private bool _active;
		
		private string _slug;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnewsItemIDChanging(int value);
    partial void OnnewsItemIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnleadChanging(string value);
    partial void OnleadChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnpublishStartChanging(System.Nullable<System.DateTime> value);
    partial void OnpublishStartChanged();
    partial void OnpublishEndChanging(System.Nullable<System.DateTime> value);
    partial void OnpublishEndChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnslugChanging(string value);
    partial void OnslugChanged();
    #endregion
		
		public NewsItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newsItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int newsItemID
		{
			get
			{
				return this._newsItemID;
			}
			set
			{
				if ((this._newsItemID != value))
				{
					this.OnnewsItemIDChanging(value);
					this.SendPropertyChanging();
					this._newsItemID = value;
					this.SendPropertyChanged("newsItemID");
					this.OnnewsItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(500)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lead", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string lead
		{
			get
			{
				return this._lead;
			}
			set
			{
				if ((this._lead != value))
				{
					this.OnleadChanging(value);
					this.SendPropertyChanging();
					this._lead = value;
					this.SendPropertyChanged("lead");
					this.OnleadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> publishStart
		{
			get
			{
				return this._publishStart;
			}
			set
			{
				if ((this._publishStart != value))
				{
					this.OnpublishStartChanging(value);
					this.SendPropertyChanging();
					this._publishStart = value;
					this.SendPropertyChanged("publishStart");
					this.OnpublishStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> publishEnd
		{
			get
			{
				return this._publishEnd;
			}
			set
			{
				if ((this._publishEnd != value))
				{
					this.OnpublishEndChanging(value);
					this.SendPropertyChanging();
					this._publishEnd = value;
					this.SendPropertyChanged("publishEnd");
					this.OnpublishEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slug", DbType="VarChar(500)")]
		public string slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnslugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("slug");
					this.OnslugChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogPost_BlogCategory")]
	public partial class BlogPost_BlogCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _postCategoryID;
		
		private int _blogPostID;
		
		private int _blogCategoryID;
		
		private EntityRef<BlogPost> _BlogPost;
		
		private EntityRef<BlogCategory> _BlogCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpostCategoryIDChanging(int value);
    partial void OnpostCategoryIDChanged();
    partial void OnblogPostIDChanging(int value);
    partial void OnblogPostIDChanged();
    partial void OnblogCategoryIDChanging(int value);
    partial void OnblogCategoryIDChanged();
    #endregion
		
		public BlogPost_BlogCategory()
		{
			this._BlogPost = default(EntityRef<BlogPost>);
			this._BlogCategory = default(EntityRef<BlogCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int postCategoryID
		{
			get
			{
				return this._postCategoryID;
			}
			set
			{
				if ((this._postCategoryID != value))
				{
					this.OnpostCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._postCategoryID = value;
					this.SendPropertyChanged("postCategoryID");
					this.OnpostCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogPostID", DbType="Int NOT NULL")]
		public int blogPostID
		{
			get
			{
				return this._blogPostID;
			}
			set
			{
				if ((this._blogPostID != value))
				{
					if (this._BlogPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblogPostIDChanging(value);
					this.SendPropertyChanging();
					this._blogPostID = value;
					this.SendPropertyChanged("blogPostID");
					this.OnblogPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogCategoryID", DbType="Int NOT NULL")]
		public int blogCategoryID
		{
			get
			{
				return this._blogCategoryID;
			}
			set
			{
				if ((this._blogCategoryID != value))
				{
					if (this._BlogCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblogCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._blogCategoryID = value;
					this.SendPropertyChanged("blogCategoryID");
					this.OnblogCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_BlogPost_BlogCategory", Storage="_BlogPost", ThisKey="blogPostID", OtherKey="blogPostID", IsForeignKey=true)]
		public BlogPost BlogPost
		{
			get
			{
				return this._BlogPost.Entity;
			}
			set
			{
				BlogPost previousValue = this._BlogPost.Entity;
				if (((previousValue != value) 
							|| (this._BlogPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogPost.Entity = null;
						previousValue.BlogPost_BlogCategories.Remove(this);
					}
					this._BlogPost.Entity = value;
					if ((value != null))
					{
						value.BlogPost_BlogCategories.Add(this);
						this._blogPostID = value.blogPostID;
					}
					else
					{
						this._blogPostID = default(int);
					}
					this.SendPropertyChanged("BlogPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogCategory_BlogPost_BlogCategory", Storage="_BlogCategory", ThisKey="blogCategoryID", OtherKey="blogCategoryID", IsForeignKey=true)]
		public BlogCategory BlogCategory
		{
			get
			{
				return this._BlogCategory.Entity;
			}
			set
			{
				BlogCategory previousValue = this._BlogCategory.Entity;
				if (((previousValue != value) 
							|| (this._BlogCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogCategory.Entity = null;
						previousValue.BlogPost_BlogCategories.Remove(this);
					}
					this._BlogCategory.Entity = value;
					if ((value != null))
					{
						value.BlogPost_BlogCategories.Add(this);
						this._blogCategoryID = value.blogCategoryID;
					}
					else
					{
						this._blogCategoryID = default(int);
					}
					this.SendPropertyChanged("BlogCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogPosts")]
	public partial class BlogPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blogPostID;
		
		private string _post_title;
		
		private string _slug;
		
		private System.Nullable<System.DateTime> _publishedDate;
		
		private System.DateTime _createdDate;
		
		private System.DateTime _lastModified;
		
		private int _userID;
		
		private string _meta_title;
		
		private string _meta_description;
		
		private string _keywords;
		
		private bool _active;
		
		private string _post_text;
		
		private EntitySet<BlogPost_BlogCategory> _BlogPost_BlogCategories;
		
		private EntitySet<Comment> _Comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblogPostIDChanging(int value);
    partial void OnblogPostIDChanged();
    partial void Onpost_titleChanging(string value);
    partial void Onpost_titleChanged();
    partial void OnslugChanging(string value);
    partial void OnslugChanged();
    partial void OnpublishedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpublishedDateChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnlastModifiedChanging(System.DateTime value);
    partial void OnlastModifiedChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void Onmeta_titleChanging(string value);
    partial void Onmeta_titleChanged();
    partial void Onmeta_descriptionChanging(string value);
    partial void Onmeta_descriptionChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onpost_textChanging(string value);
    partial void Onpost_textChanged();
    #endregion
		
		public BlogPost()
		{
			this._BlogPost_BlogCategories = new EntitySet<BlogPost_BlogCategory>(new Action<BlogPost_BlogCategory>(this.attach_BlogPost_BlogCategories), new Action<BlogPost_BlogCategory>(this.detach_BlogPost_BlogCategories));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogPostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int blogPostID
		{
			get
			{
				return this._blogPostID;
			}
			set
			{
				if ((this._blogPostID != value))
				{
					this.OnblogPostIDChanging(value);
					this.SendPropertyChanging();
					this._blogPostID = value;
					this.SendPropertyChanged("blogPostID");
					this.OnblogPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string post_title
		{
			get
			{
				return this._post_title;
			}
			set
			{
				if ((this._post_title != value))
				{
					this.Onpost_titleChanging(value);
					this.SendPropertyChanging();
					this._post_title = value;
					this.SendPropertyChanged("post_title");
					this.Onpost_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slug", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnslugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("slug");
					this.OnslugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> publishedDate
		{
			get
			{
				return this._publishedDate;
			}
			set
			{
				if ((this._publishedDate != value))
				{
					this.OnpublishedDateChanging(value);
					this.SendPropertyChanging();
					this._publishedDate = value;
					this.SendPropertyChanged("publishedDate");
					this.OnpublishedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModified", DbType="DateTime NOT NULL")]
		public System.DateTime lastModified
		{
			get
			{
				return this._lastModified;
			}
			set
			{
				if ((this._lastModified != value))
				{
					this.OnlastModifiedChanging(value);
					this.SendPropertyChanging();
					this._lastModified = value;
					this.SendPropertyChanged("lastModified");
					this.OnlastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_title", DbType="NVarChar(255)")]
		public string meta_title
		{
			get
			{
				return this._meta_title;
			}
			set
			{
				if ((this._meta_title != value))
				{
					this.Onmeta_titleChanging(value);
					this.SendPropertyChanging();
					this._meta_title = value;
					this.SendPropertyChanged("meta_title");
					this.Onmeta_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_description", DbType="NVarChar(255)")]
		public string meta_description
		{
			get
			{
				return this._meta_description;
			}
			set
			{
				if ((this._meta_description != value))
				{
					this.Onmeta_descriptionChanging(value);
					this.SendPropertyChanging();
					this._meta_description = value;
					this.SendPropertyChanged("meta_description");
					this.Onmeta_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string post_text
		{
			get
			{
				return this._post_text;
			}
			set
			{
				if ((this._post_text != value))
				{
					this.Onpost_textChanging(value);
					this.SendPropertyChanging();
					this._post_text = value;
					this.SendPropertyChanged("post_text");
					this.Onpost_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_BlogPost_BlogCategory", Storage="_BlogPost_BlogCategories", ThisKey="blogPostID", OtherKey="blogPostID")]
		public EntitySet<BlogPost_BlogCategory> BlogPost_BlogCategories
		{
			get
			{
				return this._BlogPost_BlogCategories;
			}
			set
			{
				this._BlogPost_BlogCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_Comment", Storage="_Comments", ThisKey="blogPostID", OtherKey="blogPostID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogPost_BlogCategories(BlogPost_BlogCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = this;
		}
		
		private void detach_BlogPost_BlogCategories(BlogPost_BlogCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _commentID;
		
		private int _blogPostID;
		
		private string _name;
		
		private string _email;
		
		private string _comment_text;
		
		private System.DateTime _createdDate;
		
		private bool _approved;
		
		private bool _active;
		
		private EntityRef<BlogPost> _BlogPost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncommentIDChanging(int value);
    partial void OncommentIDChanged();
    partial void OnblogPostIDChanging(int value);
    partial void OnblogPostIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncomment_textChanging(string value);
    partial void Oncomment_textChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public Comment()
		{
			this._BlogPost = default(EntityRef<BlogPost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int commentID
		{
			get
			{
				return this._commentID;
			}
			set
			{
				if ((this._commentID != value))
				{
					this.OncommentIDChanging(value);
					this.SendPropertyChanging();
					this._commentID = value;
					this.SendPropertyChanged("commentID");
					this.OncommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogPostID", DbType="Int NOT NULL")]
		public int blogPostID
		{
			get
			{
				return this._blogPostID;
			}
			set
			{
				if ((this._blogPostID != value))
				{
					if (this._BlogPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblogPostIDChanging(value);
					this.SendPropertyChanging();
					this._blogPostID = value;
					this.SendPropertyChanged("blogPostID");
					this.OnblogPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string comment_text
		{
			get
			{
				return this._comment_text;
			}
			set
			{
				if ((this._comment_text != value))
				{
					this.Oncomment_textChanging(value);
					this.SendPropertyChanging();
					this._comment_text = value;
					this.SendPropertyChanged("comment_text");
					this.Oncomment_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_Comment", Storage="_BlogPost", ThisKey="blogPostID", OtherKey="blogPostID", IsForeignKey=true)]
		public BlogPost BlogPost
		{
			get
			{
				return this._BlogPost.Entity;
			}
			set
			{
				BlogPost previousValue = this._BlogPost.Entity;
				if (((previousValue != value) 
							|| (this._BlogPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogPost.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._BlogPost.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._blogPostID = value.blogPostID;
					}
					else
					{
						this._blogPostID = default(int);
					}
					this.SendPropertyChanged("BlogPost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogCategories")]
	public partial class BlogCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blogCategoryID;
		
		private string _name;
		
		private bool _active;
		
		private string _slug;
		
		private EntitySet<BlogPost_BlogCategory> _BlogPost_BlogCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblogCategoryIDChanging(int value);
    partial void OnblogCategoryIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnslugChanging(string value);
    partial void OnslugChanged();
    #endregion
		
		public BlogCategory()
		{
			this._BlogPost_BlogCategories = new EntitySet<BlogPost_BlogCategory>(new Action<BlogPost_BlogCategory>(this.attach_BlogPost_BlogCategories), new Action<BlogPost_BlogCategory>(this.detach_BlogPost_BlogCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int blogCategoryID
		{
			get
			{
				return this._blogCategoryID;
			}
			set
			{
				if ((this._blogCategoryID != value))
				{
					this.OnblogCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._blogCategoryID = value;
					this.SendPropertyChanged("blogCategoryID");
					this.OnblogCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slug", DbType="VarChar(255)")]
		public string slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnslugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("slug");
					this.OnslugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogCategory_BlogPost_BlogCategory", Storage="_BlogPost_BlogCategories", ThisKey="blogCategoryID", OtherKey="blogCategoryID")]
		public EntitySet<BlogPost_BlogCategory> BlogPost_BlogCategories
		{
			get
			{
				return this._BlogPost_BlogCategories;
			}
			set
			{
				this._BlogPost_BlogCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogPost_BlogCategories(BlogPost_BlogCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogCategory = this;
		}
		
		private void detach_BlogPost_BlogCategories(BlogPost_BlogCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _countryID;
		
		private string _name;
		
		private string _abbr;
		
		private EntitySet<State> _States;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncountryIDChanging(int value);
    partial void OncountryIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnabbrChanging(string value);
    partial void OnabbrChanged();
    #endregion
		
		public Country()
		{
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int countryID
		{
			get
			{
				return this._countryID;
			}
			set
			{
				if ((this._countryID != value))
				{
					this.OncountryIDChanging(value);
					this.SendPropertyChanging();
					this._countryID = value;
					this.SendPropertyChanged("countryID");
					this.OncountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbr", DbType="VarChar(10)")]
		public string abbr
		{
			get
			{
				return this._abbr;
			}
			set
			{
				if ((this._abbr != value))
				{
					this.OnabbrChanging(value);
					this.SendPropertyChanging();
					this._abbr = value;
					this.SendPropertyChanged("abbr");
					this.OnabbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_States", ThisKey="countryID", OtherKey="countryID")]
		internal EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stateID;
		
		private string _state1;
		
		private string _abbr;
		
		private int _countryID;
		
		private EntitySet<CustomerLocation> _CustomerLocations;
		
		private EntitySet<Customer> _Customers;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void Onstate1Changing(string value);
    partial void Onstate1Changed();
    partial void OnabbrChanging(string value);
    partial void OnabbrChanged();
    partial void OncountryIDChanging(int value);
    partial void OncountryIDChanged();
    #endregion
		
		public State()
		{
			this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="state", Storage="_state1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string state1
		{
			get
			{
				return this._state1;
			}
			set
			{
				if ((this._state1 != value))
				{
					this.Onstate1Changing(value);
					this.SendPropertyChanging();
					this._state1 = value;
					this.SendPropertyChanged("state1");
					this.Onstate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbr", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string abbr
		{
			get
			{
				return this._abbr;
			}
			set
			{
				if ((this._abbr != value))
				{
					this.OnabbrChanging(value);
					this.SendPropertyChanging();
					this._abbr = value;
					this.SendPropertyChanged("abbr");
					this.OnabbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryID", DbType="Int NOT NULL")]
		public int countryID
		{
			get
			{
				return this._countryID;
			}
			set
			{
				if ((this._countryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryIDChanging(value);
					this.SendPropertyChanging();
					this._countryID = value;
					this.SendPropertyChanged("countryID");
					this.OncountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_CustomerLocation", Storage="_CustomerLocations", ThisKey="stateID", OtherKey="stateID")]
		internal EntitySet<CustomerLocation> CustomerLocations
		{
			get
			{
				return this._CustomerLocations;
			}
			set
			{
				this._CustomerLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Customer", Storage="_Customers", ThisKey="stateID", OtherKey="stateID")]
		internal EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_Country", ThisKey="countryID", OtherKey="countryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._countryID = value.countryID;
					}
					else
					{
						this._countryID = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerLocations")]
	public partial class CustomerLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _locationID;
		
		private string _name;
		
		private string _address;
		
		private string _city;
		
		private int _stateID;
		
		private string _email;
		
		private string _phone;
		
		private string _fax;
		
		private double _latitude;
		
		private double _longitude;
		
		private int _cust_id;
		
		private string _contact_person;
		
		private bool _isprimary;
		
		private string _postalCode;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlocationIDChanging(int value);
    partial void OnlocationIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnlatitudeChanging(double value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(double value);
    partial void OnlongitudeChanged();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void Oncontact_personChanging(string value);
    partial void Oncontact_personChanged();
    partial void OnisprimaryChanging(bool value);
    partial void OnisprimaryChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    #endregion
		
		public CustomerLocation()
		{
			this._Customer = default(EntityRef<Customer>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(500)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int NOT NULL")]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(500)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(20)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float NOT NULL")]
		public double latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float NOT NULL")]
		public double longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int NOT NULL")]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_person", DbType="VarChar(300)")]
		public string contact_person
		{
			get
			{
				return this._contact_person;
			}
			set
			{
				if ((this._contact_person != value))
				{
					this.Oncontact_personChanging(value);
					this.SendPropertyChanging();
					this._contact_person = value;
					this.SendPropertyChanged("contact_person");
					this.Oncontact_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isprimary", DbType="Bit NOT NULL")]
		public bool isprimary
		{
			get
			{
				return this._isprimary;
			}
			set
			{
				if ((this._isprimary != value))
				{
					this.OnisprimaryChanging(value);
					this.SendPropertyChanging();
					this._isprimary = value;
					this.SendPropertyChanged("isprimary");
					this.OnisprimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(30)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerLocation", Storage="_Customer", ThisKey="cust_id", OtherKey="cust_id", IsForeignKey=true)]
		internal Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerLocations.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerLocations.Add(this);
						this._cust_id = value.cust_id;
					}
					else
					{
						this._cust_id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_CustomerLocation", Storage="_State", ThisKey="stateID", OtherKey="stateID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.CustomerLocations.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.CustomerLocations.Add(this);
						this._stateID = value.stateID;
					}
					else
					{
						this._stateID = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteContent")]
	public partial class SiteContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contentID;
		
		private string _content_type;
		
		private string _page_title;
		
		private System.DateTime _createdDate;
		
		private System.DateTime _lastModified;
		
		private string _meta_title;
		
		private string _meta_description;
		
		private string _keywords;
		
		private bool _isPrimary;
		
		private bool _published;
		
		private bool _active;
		
		private string _slug;
		
		private bool _requireAuthentication;
		
		private string _canonical;
		
		private EntitySet<Menu_SiteContent> _Menu_SiteContents;
		
		private EntitySet<SiteContentRevision> _SiteContentRevisions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontentIDChanging(int value);
    partial void OncontentIDChanged();
    partial void Oncontent_typeChanging(string value);
    partial void Oncontent_typeChanged();
    partial void Onpage_titleChanging(string value);
    partial void Onpage_titleChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnlastModifiedChanging(System.DateTime value);
    partial void OnlastModifiedChanged();
    partial void Onmeta_titleChanging(string value);
    partial void Onmeta_titleChanged();
    partial void Onmeta_descriptionChanging(string value);
    partial void Onmeta_descriptionChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OnisPrimaryChanging(bool value);
    partial void OnisPrimaryChanged();
    partial void OnpublishedChanging(bool value);
    partial void OnpublishedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnslugChanging(string value);
    partial void OnslugChanged();
    partial void OnrequireAuthenticationChanging(bool value);
    partial void OnrequireAuthenticationChanged();
    partial void OncanonicalChanging(string value);
    partial void OncanonicalChanged();
    #endregion
		
		public SiteContent()
		{
			this._Menu_SiteContents = new EntitySet<Menu_SiteContent>(new Action<Menu_SiteContent>(this.attach_Menu_SiteContents), new Action<Menu_SiteContent>(this.detach_Menu_SiteContents));
			this._SiteContentRevisions = new EntitySet<SiteContentRevision>(new Action<SiteContentRevision>(this.attach_SiteContentRevisions), new Action<SiteContentRevision>(this.detach_SiteContentRevisions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contentID
		{
			get
			{
				return this._contentID;
			}
			set
			{
				if ((this._contentID != value))
				{
					this.OncontentIDChanging(value);
					this.SendPropertyChanging();
					this._contentID = value;
					this.SendPropertyChanged("contentID");
					this.OncontentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content_type", DbType="VarChar(255)")]
		public string content_type
		{
			get
			{
				return this._content_type;
			}
			set
			{
				if ((this._content_type != value))
				{
					this.Oncontent_typeChanging(value);
					this.SendPropertyChanging();
					this._content_type = value;
					this.SendPropertyChanged("content_type");
					this.Oncontent_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_title", DbType="VarChar(500)")]
		public string page_title
		{
			get
			{
				return this._page_title;
			}
			set
			{
				if ((this._page_title != value))
				{
					this.Onpage_titleChanging(value);
					this.SendPropertyChanging();
					this._page_title = value;
					this.SendPropertyChanged("page_title");
					this.Onpage_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModified", DbType="DateTime NOT NULL")]
		public System.DateTime lastModified
		{
			get
			{
				return this._lastModified;
			}
			set
			{
				if ((this._lastModified != value))
				{
					this.OnlastModifiedChanging(value);
					this.SendPropertyChanging();
					this._lastModified = value;
					this.SendPropertyChanged("lastModified");
					this.OnlastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_title", DbType="VarChar(255)")]
		public string meta_title
		{
			get
			{
				return this._meta_title;
			}
			set
			{
				if ((this._meta_title != value))
				{
					this.Onmeta_titleChanging(value);
					this.SendPropertyChanging();
					this._meta_title = value;
					this.SendPropertyChanged("meta_title");
					this.Onmeta_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_description", DbType="VarChar(255)")]
		public string meta_description
		{
			get
			{
				return this._meta_description;
			}
			set
			{
				if ((this._meta_description != value))
				{
					this.Onmeta_descriptionChanging(value);
					this.SendPropertyChanging();
					this._meta_description = value;
					this.SendPropertyChanged("meta_description");
					this.Onmeta_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimary", DbType="Bit NOT NULL")]
		public bool isPrimary
		{
			get
			{
				return this._isPrimary;
			}
			set
			{
				if ((this._isPrimary != value))
				{
					this.OnisPrimaryChanging(value);
					this.SendPropertyChanging();
					this._isPrimary = value;
					this.SendPropertyChanged("isPrimary");
					this.OnisPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Bit NOT NULL")]
		public bool published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slug", DbType="VarChar(500)")]
		public string slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnslugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("slug");
					this.OnslugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requireAuthentication", DbType="Bit NOT NULL")]
		public bool requireAuthentication
		{
			get
			{
				return this._requireAuthentication;
			}
			set
			{
				if ((this._requireAuthentication != value))
				{
					this.OnrequireAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._requireAuthentication = value;
					this.SendPropertyChanged("requireAuthentication");
					this.OnrequireAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canonical", DbType="VarChar(255)")]
		public string canonical
		{
			get
			{
				return this._canonical;
			}
			set
			{
				if ((this._canonical != value))
				{
					this.OncanonicalChanging(value);
					this.SendPropertyChanging();
					this._canonical = value;
					this.SendPropertyChanged("canonical");
					this.OncanonicalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteContent_Menu_SiteContent", Storage="_Menu_SiteContents", ThisKey="contentID", OtherKey="contentID")]
		public EntitySet<Menu_SiteContent> Menu_SiteContents
		{
			get
			{
				return this._Menu_SiteContents;
			}
			set
			{
				this._Menu_SiteContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteContent_SiteContentRevision", Storage="_SiteContentRevisions", ThisKey="contentID", OtherKey="contentID")]
		public EntitySet<SiteContentRevision> SiteContentRevisions
		{
			get
			{
				return this._SiteContentRevisions;
			}
			set
			{
				this._SiteContentRevisions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menu_SiteContents(Menu_SiteContent entity)
		{
			this.SendPropertyChanging();
			entity.SiteContent = this;
		}
		
		private void detach_Menu_SiteContents(Menu_SiteContent entity)
		{
			this.SendPropertyChanging();
			entity.SiteContent = null;
		}
		
		private void attach_SiteContentRevisions(SiteContentRevision entity)
		{
			this.SendPropertyChanging();
			entity.SiteContent = this;
		}
		
		private void detach_SiteContentRevisions(SiteContentRevision entity)
		{
			this.SendPropertyChanging();
			entity.SiteContent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessClass")]
	public partial class BusinessClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessClassID;
		
		private string _name;
		
		private int _sort;
		
		private bool _showOnWebsite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessClassIDChanging(int value);
    partial void OnBusinessClassIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    partial void OnshowOnWebsiteChanging(bool value);
    partial void OnshowOnWebsiteChanged();
    #endregion
		
		public BusinessClass()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessClassID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BusinessClassID
		{
			get
			{
				return this._BusinessClassID;
			}
			set
			{
				if ((this._BusinessClassID != value))
				{
					this.OnBusinessClassIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessClassID = value;
					this.SendPropertyChanged("BusinessClassID");
					this.OnBusinessClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showOnWebsite", DbType="Bit NOT NULL")]
		public bool showOnWebsite
		{
			get
			{
				return this._showOnWebsite;
			}
			set
			{
				if ((this._showOnWebsite != value))
				{
					this.OnshowOnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._showOnWebsite = value;
					this.SendPropertyChanged("showOnWebsite");
					this.OnshowOnWebsiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactType")]
	public partial class ContactType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contactTypeID;
		
		private string _name;
		
		private EntitySet<ContactReceiver_ContactType> _ContactReceiver_ContactTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactTypeIDChanging(int value);
    partial void OncontactTypeIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ContactType()
		{
			this._ContactReceiver_ContactTypes = new EntitySet<ContactReceiver_ContactType>(new Action<ContactReceiver_ContactType>(this.attach_ContactReceiver_ContactTypes), new Action<ContactReceiver_ContactType>(this.detach_ContactReceiver_ContactTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contactTypeID
		{
			get
			{
				return this._contactTypeID;
			}
			set
			{
				if ((this._contactTypeID != value))
				{
					this.OncontactTypeIDChanging(value);
					this.SendPropertyChanging();
					this._contactTypeID = value;
					this.SendPropertyChanged("contactTypeID");
					this.OncontactTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactType_ContactReceiver_ContactType", Storage="_ContactReceiver_ContactTypes", ThisKey="contactTypeID", OtherKey="contactTypeID")]
		public EntitySet<ContactReceiver_ContactType> ContactReceiver_ContactTypes
		{
			get
			{
				return this._ContactReceiver_ContactTypes;
			}
			set
			{
				this._ContactReceiver_ContactTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactReceiver_ContactTypes(ContactReceiver_ContactType entity)
		{
			this.SendPropertyChanging();
			entity.ContactType = this;
		}
		
		private void detach_ContactReceiver_ContactTypes(ContactReceiver_ContactType entity)
		{
			this.SendPropertyChanging();
			entity.ContactType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactReceiver_ContactType")]
	public partial class ContactReceiver_ContactType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _receiverTypeID;
		
		private int _contactReceiverID;
		
		private int _contactTypeID;
		
		private EntityRef<ContactReceiver> _ContactReceiver;
		
		private EntityRef<ContactType> _ContactType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreceiverTypeIDChanging(int value);
    partial void OnreceiverTypeIDChanged();
    partial void OncontactReceiverIDChanging(int value);
    partial void OncontactReceiverIDChanged();
    partial void OncontactTypeIDChanging(int value);
    partial void OncontactTypeIDChanged();
    #endregion
		
		public ContactReceiver_ContactType()
		{
			this._ContactReceiver = default(EntityRef<ContactReceiver>);
			this._ContactType = default(EntityRef<ContactType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int receiverTypeID
		{
			get
			{
				return this._receiverTypeID;
			}
			set
			{
				if ((this._receiverTypeID != value))
				{
					this.OnreceiverTypeIDChanging(value);
					this.SendPropertyChanging();
					this._receiverTypeID = value;
					this.SendPropertyChanged("receiverTypeID");
					this.OnreceiverTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactReceiverID", DbType="Int NOT NULL")]
		public int contactReceiverID
		{
			get
			{
				return this._contactReceiverID;
			}
			set
			{
				if ((this._contactReceiverID != value))
				{
					if (this._ContactReceiver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactReceiverIDChanging(value);
					this.SendPropertyChanging();
					this._contactReceiverID = value;
					this.SendPropertyChanged("contactReceiverID");
					this.OncontactReceiverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactTypeID", DbType="Int NOT NULL")]
		public int contactTypeID
		{
			get
			{
				return this._contactTypeID;
			}
			set
			{
				if ((this._contactTypeID != value))
				{
					if (this._ContactType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactTypeIDChanging(value);
					this.SendPropertyChanging();
					this._contactTypeID = value;
					this.SendPropertyChanged("contactTypeID");
					this.OncontactTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactReceiver_ContactReceiver_ContactType", Storage="_ContactReceiver", ThisKey="contactReceiverID", OtherKey="contactReceiverID", IsForeignKey=true)]
		public ContactReceiver ContactReceiver
		{
			get
			{
				return this._ContactReceiver.Entity;
			}
			set
			{
				ContactReceiver previousValue = this._ContactReceiver.Entity;
				if (((previousValue != value) 
							|| (this._ContactReceiver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactReceiver.Entity = null;
						previousValue.ContactReceiver_ContactTypes.Remove(this);
					}
					this._ContactReceiver.Entity = value;
					if ((value != null))
					{
						value.ContactReceiver_ContactTypes.Add(this);
						this._contactReceiverID = value.contactReceiverID;
					}
					else
					{
						this._contactReceiverID = default(int);
					}
					this.SendPropertyChanged("ContactReceiver");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactType_ContactReceiver_ContactType", Storage="_ContactType", ThisKey="contactTypeID", OtherKey="contactTypeID", IsForeignKey=true)]
		public ContactType ContactType
		{
			get
			{
				return this._ContactType.Entity;
			}
			set
			{
				ContactType previousValue = this._ContactType.Entity;
				if (((previousValue != value) 
							|| (this._ContactType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactType.Entity = null;
						previousValue.ContactReceiver_ContactTypes.Remove(this);
					}
					this._ContactType.Entity = value;
					if ((value != null))
					{
						value.ContactReceiver_ContactTypes.Add(this);
						this._contactTypeID = value.contactTypeID;
					}
					else
					{
						this._contactTypeID = default(int);
					}
					this.SendPropertyChanged("ContactType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Testimonial")]
	public partial class Testimonial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _testimonialID;
		
		private double _rating;
		
		private string _title;
		
		private string _testimonial1;
		
		private System.DateTime _dateAdded;
		
		private bool _approved;
		
		private bool _active;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntestimonialIDChanging(int value);
    partial void OntestimonialIDChanged();
    partial void OnratingChanging(double value);
    partial void OnratingChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Ontestimonial1Changing(string value);
    partial void Ontestimonial1Changed();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public Testimonial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testimonialID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int testimonialID
		{
			get
			{
				return this._testimonialID;
			}
			set
			{
				if ((this._testimonialID != value))
				{
					this.OntestimonialIDChanging(value);
					this.SendPropertyChanging();
					this._testimonialID = value;
					this.SendPropertyChanged("testimonialID");
					this.OntestimonialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Float NOT NULL")]
		public double rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(500)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="testimonial", Storage="_testimonial1", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string testimonial1
		{
			get
			{
				return this._testimonial1;
			}
			set
			{
				if ((this._testimonial1 != value))
				{
					this.Ontestimonial1Changing(value);
					this.SendPropertyChanging();
					this._testimonial1 = value;
					this.SendPropertyChanged("testimonial1");
					this.Ontestimonial1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(255)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(255)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(255)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealerTypes")]
	public partial class DealerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dealer_type;
		
		private string _type;
		
		private bool _online;
		
		private bool _show;
		
		private string _label;
		
		private EntitySet<MapIcon> _MapIcons;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondealer_typeChanging(int value);
    partial void Ondealer_typeChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnonlineChanging(bool value);
    partial void OnonlineChanged();
    partial void OnshowChanging(bool value);
    partial void OnshowChanged();
    partial void OnlabelChanging(string value);
    partial void OnlabelChanged();
    #endregion
		
		public DealerType()
		{
			this._MapIcons = new EntitySet<MapIcon>(new Action<MapIcon>(this.attach_MapIcons), new Action<MapIcon>(this.detach_MapIcons));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dealer_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dealer_type
		{
			get
			{
				return this._dealer_type;
			}
			set
			{
				if ((this._dealer_type != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondealer_typeChanging(value);
					this.SendPropertyChanging();
					this._dealer_type = value;
					this.SendPropertyChanged("dealer_type");
					this.Ondealer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(100)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_online", DbType="Bit NOT NULL")]
		public bool online
		{
			get
			{
				return this._online;
			}
			set
			{
				if ((this._online != value))
				{
					this.OnonlineChanging(value);
					this.SendPropertyChanging();
					this._online = value;
					this.SendPropertyChanged("online");
					this.OnonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show", DbType="Bit NOT NULL")]
		public bool show
		{
			get
			{
				return this._show;
			}
			set
			{
				if ((this._show != value))
				{
					this.OnshowChanging(value);
					this.SendPropertyChanging();
					this._show = value;
					this.SendPropertyChanged("show");
					this.OnshowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_label", DbType="VarChar(300) NULL", CanBeNull=false)]
		public string label
		{
			get
			{
				return this._label;
			}
			set
			{
				if ((this._label != value))
				{
					this.OnlabelChanging(value);
					this.SendPropertyChanging();
					this._label = value;
					this.SendPropertyChanged("label");
					this.OnlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerType_MapIcon", Storage="_MapIcons", ThisKey="dealer_type", OtherKey="dealer_type")]
		public EntitySet<MapIcon> MapIcons
		{
			get
			{
				return this._MapIcons;
			}
			set
			{
				this._MapIcons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DealerType", Storage="_Customer", ThisKey="dealer_type", OtherKey="dealer_type", IsForeignKey=true)]
		internal Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.DealerType = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.DealerType = this;
						this._dealer_type = value.dealer_type;
					}
					else
					{
						this._dealer_type = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapIcons(MapIcon entity)
		{
			this.SendPropertyChanging();
			entity.DealerType = this;
		}
		
		private void detach_MapIcons(MapIcon entity)
		{
			this.SendPropertyChanging();
			entity.DealerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cust_id;
		
		private string _name;
		
		private string _email;
		
		private string _address;
		
		private string _city;
		
		private int _stateID;
		
		private string _phone;
		
		private string _fax;
		
		private string _contact_person;
		
		private int _dealer_type;
		
		private string _latitude;
		
		private string _longitude;
		
		private string _password;
		
		private string _website;
		
		private System.Nullable<int> _customerID;
		
		private bool _isDummy;
		
		private System.Nullable<int> _parentID;
		
		private string _searchURL;
		
		private string _logo;
		
		private string _address2;
		
		private string _postal_code;
		
		private int _mCodeID;
		
		private System.Nullable<int> _salesRepID;
		
		private int _tier;
		
		private EntitySet<CustomerLocation> _CustomerLocations;
		
		private EntityRef<DealerType> _DealerType;
		
		private EntityRef<DealerTier> _DealerTier;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void Oncontact_personChanging(string value);
    partial void Oncontact_personChanged();
    partial void Ondealer_typeChanging(int value);
    partial void Ondealer_typeChanged();
    partial void OnlatitudeChanging(string value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(string value);
    partial void OnlongitudeChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OncustomerIDChanging(System.Nullable<int> value);
    partial void OncustomerIDChanged();
    partial void OnisDummyChanging(bool value);
    partial void OnisDummyChanged();
    partial void OnparentIDChanging(System.Nullable<int> value);
    partial void OnparentIDChanged();
    partial void OnsearchURLChanging(string value);
    partial void OnsearchURLChanged();
    partial void OnlogoChanging(string value);
    partial void OnlogoChanged();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void Onpostal_codeChanging(string value);
    partial void Onpostal_codeChanged();
    partial void OnmCodeIDChanging(int value);
    partial void OnmCodeIDChanged();
    partial void OnsalesRepIDChanging(System.Nullable<int> value);
    partial void OnsalesRepIDChanged();
    partial void OntierChanging(int value);
    partial void OntierChanged();
    #endregion
		
		public Customer()
		{
			this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
			this._DealerType = default(EntityRef<DealerType>);
			this._DealerTier = default(EntityRef<DealerTier>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(150)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int NOT NULL")]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(50)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_person", DbType="VarChar(300)")]
		public string contact_person
		{
			get
			{
				return this._contact_person;
			}
			set
			{
				if ((this._contact_person != value))
				{
					this.Oncontact_personChanging(value);
					this.SendPropertyChanging();
					this._contact_person = value;
					this.SendPropertyChanged("contact_person");
					this.Oncontact_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dealer_type", DbType="Int NOT NULL")]
		public int dealer_type
		{
			get
			{
				return this._dealer_type;
			}
			set
			{
				if ((this._dealer_type != value))
				{
					this.Ondealer_typeChanging(value);
					this.SendPropertyChanging();
					this._dealer_type = value;
					this.SendPropertyChanged("dealer_type");
					this.Ondealer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="VarChar(200)")]
		public string latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="VarChar(200)")]
		public string longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="VarChar(500)")]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", DbType="Int")]
		public System.Nullable<int> customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDummy", DbType="Bit NOT NULL")]
		public bool isDummy
		{
			get
			{
				return this._isDummy;
			}
			set
			{
				if ((this._isDummy != value))
				{
					this.OnisDummyChanging(value);
					this.SendPropertyChanging();
					this._isDummy = value;
					this.SendPropertyChanged("isDummy");
					this.OnisDummyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int")]
		public System.Nullable<int> parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_searchURL", DbType="VarChar(500)")]
		public string searchURL
		{
			get
			{
				return this._searchURL;
			}
			set
			{
				if ((this._searchURL != value))
				{
					this.OnsearchURLChanging(value);
					this.SendPropertyChanging();
					this._searchURL = value;
					this.SendPropertyChanged("searchURL");
					this.OnsearchURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="VarChar(500)")]
		public string logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address2", DbType="VarChar(500)")]
		public string address2
		{
			get
			{
				return this._address2;
			}
			set
			{
				if ((this._address2 != value))
				{
					this.Onaddress2Changing(value);
					this.SendPropertyChanging();
					this._address2 = value;
					this.SendPropertyChanged("address2");
					this.Onaddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="VarChar(25)")]
		public string postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mCodeID", DbType="Int")]
		public int mCodeID
		{
			get
			{
				return this._mCodeID;
			}
			set
			{
				if ((this._mCodeID != value))
				{
					this.OnmCodeIDChanging(value);
					this.SendPropertyChanging();
					this._mCodeID = value;
					this.SendPropertyChanged("mCodeID");
					this.OnmCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesRepID", DbType="Int")]
		public System.Nullable<int> salesRepID
		{
			get
			{
				return this._salesRepID;
			}
			set
			{
				if ((this._salesRepID != value))
				{
					this.OnsalesRepIDChanging(value);
					this.SendPropertyChanging();
					this._salesRepID = value;
					this.SendPropertyChanged("salesRepID");
					this.OnsalesRepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tier", DbType="Int NOT NULL")]
		public int tier
		{
			get
			{
				return this._tier;
			}
			set
			{
				if ((this._tier != value))
				{
					this.OntierChanging(value);
					this.SendPropertyChanging();
					this._tier = value;
					this.SendPropertyChanged("tier");
					this.OntierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerLocation", Storage="_CustomerLocations", ThisKey="cust_id", OtherKey="cust_id")]
		public EntitySet<CustomerLocation> CustomerLocations
		{
			get
			{
				return this._CustomerLocations;
			}
			set
			{
				this._CustomerLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DealerType", Storage="_DealerType", ThisKey="dealer_type", OtherKey="dealer_type", IsUnique=true, IsForeignKey=false)]
		public DealerType DealerType
		{
			get
			{
				return this._DealerType.Entity;
			}
			set
			{
				DealerType previousValue = this._DealerType.Entity;
				if (((previousValue != value) 
							|| (this._DealerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerType.Entity = null;
						previousValue.Customer = null;
					}
					this._DealerType.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("DealerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DealerTier", Storage="_DealerTier", ThisKey="tier", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public DealerTier DealerTier
		{
			get
			{
				return this._DealerTier.Entity;
			}
			set
			{
				DealerTier previousValue = this._DealerTier.Entity;
				if (((previousValue != value) 
							|| (this._DealerTier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerTier.Entity = null;
						previousValue.Customer = null;
					}
					this._DealerTier.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("DealerTier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Customer", Storage="_State", ThisKey="stateID", OtherKey="stateID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._stateID = value.stateID;
					}
					else
					{
						this._stateID = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lifestyle_Trailer")]
	public partial class Lifestyle_Trailer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lifestyleTrailerID;
		
		private int _catID;
		
		private int _trailerID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlifestyleTrailerIDChanging(int value);
    partial void OnlifestyleTrailerIDChanged();
    partial void OncatIDChanging(int value);
    partial void OncatIDChanged();
    partial void OntrailerIDChanging(int value);
    partial void OntrailerIDChanged();
    #endregion
		
		public Lifestyle_Trailer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lifestyleTrailerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int lifestyleTrailerID
		{
			get
			{
				return this._lifestyleTrailerID;
			}
			set
			{
				if ((this._lifestyleTrailerID != value))
				{
					this.OnlifestyleTrailerIDChanging(value);
					this.SendPropertyChanging();
					this._lifestyleTrailerID = value;
					this.SendPropertyChanged("lifestyleTrailerID");
					this.OnlifestyleTrailerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catID", DbType="Int NOT NULL")]
		public int catID
		{
			get
			{
				return this._catID;
			}
			set
			{
				if ((this._catID != value))
				{
					this.OncatIDChanging(value);
					this.SendPropertyChanging();
					this._catID = value;
					this.SendPropertyChanged("catID");
					this.OncatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trailerID", DbType="Int NOT NULL")]
		public int trailerID
		{
			get
			{
				return this._trailerID;
			}
			set
			{
				if ((this._trailerID != value))
				{
					this.OntrailerIDChanging(value);
					this.SendPropertyChanging();
					this._trailerID = value;
					this.SendPropertyChanged("trailerID");
					this.OntrailerIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trailer")]
	public partial class Trailer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _trailerID;
		
		private string _image;
		
		private string _name;
		
		private System.Nullable<int> _TW;
		
		private System.Nullable<int> _GTW;
		
		private string _hitchClass;
		
		private string _shortDesc;
		
		private string _message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntrailerIDChanging(int value);
    partial void OntrailerIDChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnTWChanging(System.Nullable<int> value);
    partial void OnTWChanged();
    partial void OnGTWChanging(System.Nullable<int> value);
    partial void OnGTWChanged();
    partial void OnhitchClassChanging(string value);
    partial void OnhitchClassChanged();
    partial void OnshortDescChanging(string value);
    partial void OnshortDescChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public Trailer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trailerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int trailerID
		{
			get
			{
				return this._trailerID;
			}
			set
			{
				if ((this._trailerID != value))
				{
					this.OntrailerIDChanging(value);
					this.SendPropertyChanging();
					this._trailerID = value;
					this.SendPropertyChanged("trailerID");
					this.OntrailerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TW", DbType="Int")]
		public System.Nullable<int> TW
		{
			get
			{
				return this._TW;
			}
			set
			{
				if ((this._TW != value))
				{
					this.OnTWChanging(value);
					this.SendPropertyChanging();
					this._TW = value;
					this.SendPropertyChanged("TW");
					this.OnTWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTW", DbType="Int")]
		public System.Nullable<int> GTW
		{
			get
			{
				return this._GTW;
			}
			set
			{
				if ((this._GTW != value))
				{
					this.OnGTWChanging(value);
					this.SendPropertyChanging();
					this._GTW = value;
					this.SendPropertyChanged("GTW");
					this.OnGTWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hitchClass", DbType="VarChar(255)")]
		public string hitchClass
		{
			get
			{
				return this._hitchClass;
			}
			set
			{
				if ((this._hitchClass != value))
				{
					this.OnhitchClassChanging(value);
					this.SendPropertyChanging();
					this._hitchClass = value;
					this.SendPropertyChanged("hitchClass");
					this.OnhitchClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDesc", DbType="VarChar(1000)")]
		public string shortDesc
		{
			get
			{
				return this._shortDesc;
			}
			set
			{
				if ((this._shortDesc != value))
				{
					this.OnshortDescChanging(value);
					this.SendPropertyChanging();
					this._shortDesc = value;
					this.SendPropertyChanged("shortDesc");
					this.OnshortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(1000)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _videoID;
		
		private string _embed_link;
		
		private System.DateTime _dateAdded;
		
		private int _sort;
		
		private string _title;
		
		private string _description;
		
		private string _youtubeID;
		
		private string _watchpage;
		
		private string _screenshot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvideoIDChanging(int value);
    partial void OnvideoIDChanged();
    partial void Onembed_linkChanging(string value);
    partial void Onembed_linkChanged();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnyoutubeIDChanging(string value);
    partial void OnyoutubeIDChanged();
    partial void OnwatchpageChanging(string value);
    partial void OnwatchpageChanged();
    partial void OnscreenshotChanging(string value);
    partial void OnscreenshotChanged();
    #endregion
		
		public Video()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_videoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int videoID
		{
			get
			{
				return this._videoID;
			}
			set
			{
				if ((this._videoID != value))
				{
					this.OnvideoIDChanging(value);
					this.SendPropertyChanging();
					this._videoID = value;
					this.SendPropertyChanged("videoID");
					this.OnvideoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_embed_link", DbType="VarChar(200)")]
		public string embed_link
		{
			get
			{
				return this._embed_link;
			}
			set
			{
				if ((this._embed_link != value))
				{
					this.Onembed_linkChanging(value);
					this.SendPropertyChanging();
					this._embed_link = value;
					this.SendPropertyChanged("embed_link");
					this.Onembed_linkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255) null")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(max) null")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_youtubeID", DbType="VarChar(255) NULL")]
		public string youtubeID
		{
			get
			{
				return this._youtubeID;
			}
			set
			{
				if ((this._youtubeID != value))
				{
					this.OnyoutubeIDChanging(value);
					this.SendPropertyChanging();
					this._youtubeID = value;
					this.SendPropertyChanged("youtubeID");
					this.OnyoutubeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_watchpage", DbType="VarChar(255) NULL")]
		public string watchpage
		{
			get
			{
				return this._watchpage;
			}
			set
			{
				if ((this._watchpage != value))
				{
					this.OnwatchpageChanging(value);
					this.SendPropertyChanging();
					this._watchpage = value;
					this.SendPropertyChanged("watchpage");
					this.OnwatchpageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_screenshot", DbType="VarChar(255) NULL")]
		public string screenshot
		{
			get
			{
				return this._screenshot;
			}
			set
			{
				if ((this._screenshot != value))
				{
					this.OnscreenshotChanging(value);
					this.SendPropertyChanging();
					this._screenshot = value;
					this.SendPropertyChanged("screenshot");
					this.OnscreenshotChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IPBlock")]
	public partial class IPBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blockID;
		
		private string _IPAddress;
		
		private string _reason;
		
		private System.DateTime _createdDate;
		
		private int _userID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblockIDChanging(int value);
    partial void OnblockIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    #endregion
		
		public IPBlock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blockID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int blockID
		{
			get
			{
				return this._blockID;
			}
			set
			{
				if ((this._blockID != value))
				{
					this.OnblockIDChanging(value);
					this.SendPropertyChanging();
					this._blockID = value;
					this.SendPropertyChanged("blockID");
					this.OnblockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="VarChar(255)")]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumGroup")]
	public partial class ForumGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _forumGroupID;
		
		private string _name;
		
		private string _description;
		
		private System.DateTime _createdDate;
		
		private EntitySet<ForumTopic> _ForumTopics;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnforumGroupIDChanging(int value);
    partial void OnforumGroupIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    #endregion
		
		public ForumGroup()
		{
			this._ForumTopics = new EntitySet<ForumTopic>(new Action<ForumTopic>(this.attach_ForumTopics), new Action<ForumTopic>(this.detach_ForumTopics));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forumGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int forumGroupID
		{
			get
			{
				return this._forumGroupID;
			}
			set
			{
				if ((this._forumGroupID != value))
				{
					this.OnforumGroupIDChanging(value);
					this.SendPropertyChanging();
					this._forumGroupID = value;
					this.SendPropertyChanged("forumGroupID");
					this.OnforumGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumGroup_ForumTopic", Storage="_ForumTopics", ThisKey="forumGroupID", OtherKey="TopicGroupID")]
		public EntitySet<ForumTopic> ForumTopics
		{
			get
			{
				return this._ForumTopics;
			}
			set
			{
				this._ForumTopics.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumTopics(ForumTopic entity)
		{
			this.SendPropertyChanging();
			entity.ForumGroup = this;
		}
		
		private void detach_ForumTopics(ForumTopic entity)
		{
			this.SendPropertyChanging();
			entity.ForumGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumTopic")]
	public partial class ForumTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _topicID;
		
		private int _TopicGroupID;
		
		private string _name;
		
		private string _description;
		
		private System.DateTime _createdDate;
		
		private bool _active;
		
		private bool _closed;
		
		private string _image;
		
		private EntitySet<ForumThread> _ForumThreads;
		
		private EntityRef<ForumGroup> _ForumGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntopicIDChanging(int value);
    partial void OntopicIDChanged();
    partial void OnTopicGroupIDChanging(int value);
    partial void OnTopicGroupIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnclosedChanging(bool value);
    partial void OnclosedChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public ForumTopic()
		{
			this._ForumThreads = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreads), new Action<ForumThread>(this.detach_ForumThreads));
			this._ForumGroup = default(EntityRef<ForumGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_topicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int topicID
		{
			get
			{
				return this._topicID;
			}
			set
			{
				if ((this._topicID != value))
				{
					this.OntopicIDChanging(value);
					this.SendPropertyChanging();
					this._topicID = value;
					this.SendPropertyChanged("topicID");
					this.OntopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicGroupID", DbType="Int NOT NULL")]
		public int TopicGroupID
		{
			get
			{
				return this._TopicGroupID;
			}
			set
			{
				if ((this._TopicGroupID != value))
				{
					if (this._ForumGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopicGroupIDChanging(value);
					this.SendPropertyChanging();
					this._TopicGroupID = value;
					this.SendPropertyChanged("TopicGroupID");
					this.OnTopicGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closed", DbType="Bit NOT NULL")]
		public bool closed
		{
			get
			{
				return this._closed;
			}
			set
			{
				if ((this._closed != value))
				{
					this.OnclosedChanging(value);
					this.SendPropertyChanging();
					this._closed = value;
					this.SendPropertyChanged("closed");
					this.OnclosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumTopic_ForumThread", Storage="_ForumThreads", ThisKey="topicID", OtherKey="topicID")]
		public EntitySet<ForumThread> ForumThreads
		{
			get
			{
				return this._ForumThreads;
			}
			set
			{
				this._ForumThreads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumGroup_ForumTopic", Storage="_ForumGroup", ThisKey="TopicGroupID", OtherKey="forumGroupID", IsForeignKey=true)]
		public ForumGroup ForumGroup
		{
			get
			{
				return this._ForumGroup.Entity;
			}
			set
			{
				ForumGroup previousValue = this._ForumGroup.Entity;
				if (((previousValue != value) 
							|| (this._ForumGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumGroup.Entity = null;
						previousValue.ForumTopics.Remove(this);
					}
					this._ForumGroup.Entity = value;
					if ((value != null))
					{
						value.ForumTopics.Add(this);
						this._TopicGroupID = value.forumGroupID;
					}
					else
					{
						this._TopicGroupID = default(int);
					}
					this.SendPropertyChanged("ForumGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.ForumTopic = this;
		}
		
		private void detach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.ForumTopic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPost")]
	public partial class ForumPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _postID;
		
		private int _parentID;
		
		private int _threadID;
		
		private System.DateTime _createdDate;
		
		private string _title;
		
		private string _post;
		
		private string _name;
		
		private string _email;
		
		private bool _notify;
		
		private bool _approved;
		
		private bool _active;
		
		private string _IPAddress;
		
		private bool _flag;
		
		private string _company;
		
		private bool _sticky;
		
		private EntityRef<ForumThread> _ForumThread;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpostIDChanging(int value);
    partial void OnpostIDChanged();
    partial void OnparentIDChanging(int value);
    partial void OnparentIDChanged();
    partial void OnthreadIDChanging(int value);
    partial void OnthreadIDChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnpostChanging(string value);
    partial void OnpostChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnnotifyChanging(bool value);
    partial void OnnotifyChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnflagChanging(bool value);
    partial void OnflagChanged();
    partial void OncompanyChanging(string value);
    partial void OncompanyChanged();
    partial void OnstickyChanging(bool value);
    partial void OnstickyChanged();
    #endregion
		
		public ForumPost()
		{
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int postID
		{
			get
			{
				return this._postID;
			}
			set
			{
				if ((this._postID != value))
				{
					this.OnpostIDChanging(value);
					this.SendPropertyChanging();
					this._postID = value;
					this.SendPropertyChanged("postID");
					this.OnpostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int NOT NULL")]
		public int parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_threadID", DbType="Int NOT NULL")]
		public int threadID
		{
			get
			{
				return this._threadID;
			}
			set
			{
				if ((this._threadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnthreadIDChanging(value);
					this.SendPropertyChanging();
					this._threadID = value;
					this.SendPropertyChanged("threadID");
					this.OnthreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string post
		{
			get
			{
				return this._post;
			}
			set
			{
				if ((this._post != value))
				{
					this.OnpostChanging(value);
					this.SendPropertyChanging();
					this._post = value;
					this.SendPropertyChanged("post");
					this.OnpostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notify", DbType="Bit NOT NULL")]
		public bool notify
		{
			get
			{
				return this._notify;
			}
			set
			{
				if ((this._notify != value))
				{
					this.OnnotifyChanging(value);
					this.SendPropertyChanging();
					this._notify = value;
					this.SendPropertyChanged("notify");
					this.OnnotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="Bit NOT NULL")]
		public bool flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="VarChar(255)")]
		public string company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sticky", DbType="Bit NOT NULL")]
		public bool sticky
		{
			get
			{
				return this._sticky;
			}
			set
			{
				if ((this._sticky != value))
				{
					this.OnstickyChanging(value);
					this.SendPropertyChanging();
					this._sticky = value;
					this.SendPropertyChanged("sticky");
					this.OnstickyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumPost", Storage="_ForumThread", ThisKey="threadID", OtherKey="threadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.ForumPosts.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.ForumPosts.Add(this);
						this._threadID = value.threadID;
					}
					else
					{
						this._threadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumThread")]
	public partial class ForumThread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _threadID;
		
		private int _topicID;
		
		private System.DateTime _createdDate;
		
		private bool _active;
		
		private bool _closed;
		
		private EntitySet<ForumPost> _ForumPosts;
		
		private EntityRef<ForumTopic> _ForumTopic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnthreadIDChanging(int value);
    partial void OnthreadIDChanged();
    partial void OntopicIDChanging(int value);
    partial void OntopicIDChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnclosedChanging(bool value);
    partial void OnclosedChanged();
    #endregion
		
		public ForumThread()
		{
			this._ForumPosts = new EntitySet<ForumPost>(new Action<ForumPost>(this.attach_ForumPosts), new Action<ForumPost>(this.detach_ForumPosts));
			this._ForumTopic = default(EntityRef<ForumTopic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_threadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int threadID
		{
			get
			{
				return this._threadID;
			}
			set
			{
				if ((this._threadID != value))
				{
					this.OnthreadIDChanging(value);
					this.SendPropertyChanging();
					this._threadID = value;
					this.SendPropertyChanged("threadID");
					this.OnthreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_topicID", DbType="Int NOT NULL")]
		public int topicID
		{
			get
			{
				return this._topicID;
			}
			set
			{
				if ((this._topicID != value))
				{
					if (this._ForumTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntopicIDChanging(value);
					this.SendPropertyChanging();
					this._topicID = value;
					this.SendPropertyChanged("topicID");
					this.OntopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closed", DbType="Bit NOT NULL")]
		public bool closed
		{
			get
			{
				return this._closed;
			}
			set
			{
				if ((this._closed != value))
				{
					this.OnclosedChanging(value);
					this.SendPropertyChanging();
					this._closed = value;
					this.SendPropertyChanged("closed");
					this.OnclosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumPost", Storage="_ForumPosts", ThisKey="threadID", OtherKey="threadID")]
		public EntitySet<ForumPost> ForumPosts
		{
			get
			{
				return this._ForumPosts;
			}
			set
			{
				this._ForumPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumTopic_ForumThread", Storage="_ForumTopic", ThisKey="topicID", OtherKey="topicID", IsForeignKey=true)]
		public ForumTopic ForumTopic
		{
			get
			{
				return this._ForumTopic.Entity;
			}
			set
			{
				ForumTopic previousValue = this._ForumTopic.Entity;
				if (((previousValue != value) 
							|| (this._ForumTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumTopic.Entity = null;
						previousValue.ForumThreads.Remove(this);
					}
					this._ForumTopic.Entity = value;
					if ((value != null))
					{
						value.ForumThreads.Add(this);
						this._topicID = value.topicID;
					}
					else
					{
						this._topicID = default(int);
					}
					this.SendPropertyChanged("ForumTopic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contactID;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _email;
		
		private string _phone;
		
		private string _subject;
		
		private string _message;
		
		private System.DateTime _createdDate;
		
		private string _type;
		
		private string _address1;
		
		private string _address2;
		
		private string _city;
		
		private string _state;
		
		private string _postalcode;
		
		private string _country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactIDChanging(int value);
    partial void OncontactIDChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnpostalcodeChanging(string value);
    partial void OnpostalcodeChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    #endregion
		
		public Contact()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contactID
		{
			get
			{
				return this._contactID;
			}
			set
			{
				if ((this._contactID != value))
				{
					this.OncontactIDChanging(value);
					this.SendPropertyChanging();
					this._contactID = value;
					this.SendPropertyChanged("contactID");
					this.OncontactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(255)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(255)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(30)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(500)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address1", DbType="VarChar(500)")]
		public string address1
		{
			get
			{
				return this._address1;
			}
			set
			{
				if ((this._address1 != value))
				{
					this.Onaddress1Changing(value);
					this.SendPropertyChanging();
					this._address1 = value;
					this.SendPropertyChanged("address1");
					this.Onaddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address2", DbType="VarChar(500)")]
		public string address2
		{
			get
			{
				return this._address2;
			}
			set
			{
				if ((this._address2 != value))
				{
					this.Onaddress2Changing(value);
					this.SendPropertyChanging();
					this._address2 = value;
					this.SendPropertyChanged("address2");
					this.Onaddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(255)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(10)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalcode", DbType="VarChar(20)")]
		public string postalcode
		{
			get
			{
				return this._postalcode;
			}
			set
			{
				if ((this._postalcode != value))
				{
					this.OnpostalcodeChanging(value);
					this.SendPropertyChanging();
					this._postalcode = value;
					this.SendPropertyChanged("postalcode");
					this.OnpostalcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(255)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TwitterLog")]
	public partial class TwitterLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tweetLogID;
		
		private System.DateTime _lastUpdated;
		
		private int _tweets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntweetLogIDChanging(int value);
    partial void OntweetLogIDChanged();
    partial void OnlastUpdatedChanging(System.DateTime value);
    partial void OnlastUpdatedChanged();
    partial void OntweetsChanging(int value);
    partial void OntweetsChanged();
    #endregion
		
		public TwitterLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tweetLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tweetLogID
		{
			get
			{
				return this._tweetLogID;
			}
			set
			{
				if ((this._tweetLogID != value))
				{
					this.OntweetLogIDChanging(value);
					this.SendPropertyChanging();
					this._tweetLogID = value;
					this.SendPropertyChanged("tweetLogID");
					this.OntweetLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime lastUpdated
		{
			get
			{
				return this._lastUpdated;
			}
			set
			{
				if ((this._lastUpdated != value))
				{
					this.OnlastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._lastUpdated = value;
					this.SendPropertyChanged("lastUpdated");
					this.OnlastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tweets", DbType="Int NOT NULL")]
		public int tweets
		{
			get
			{
				return this._tweets;
			}
			set
			{
				if ((this._tweets != value))
				{
					this.OntweetsChanging(value);
					this.SendPropertyChanging();
					this._tweets = value;
					this.SendPropertyChanged("tweets");
					this.OntweetsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tweets")]
	public partial class Tweet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tweetID;
		
		private string _twitterTweetID;
		
		private string _tweet1;
		
		private System.DateTime _postDate;
		
		private string _twitterUserID;
		
		private string _screenName;
		
		private string _profilePhoto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntweetIDChanging(int value);
    partial void OntweetIDChanged();
    partial void OntwitterTweetIDChanging(string value);
    partial void OntwitterTweetIDChanged();
    partial void Ontweet1Changing(string value);
    partial void Ontweet1Changed();
    partial void OnpostDateChanging(System.DateTime value);
    partial void OnpostDateChanged();
    partial void OntwitterUserIDChanging(string value);
    partial void OntwitterUserIDChanged();
    partial void OnscreenNameChanging(string value);
    partial void OnscreenNameChanged();
    partial void OnprofilePhotoChanging(string value);
    partial void OnprofilePhotoChanged();
    #endregion
		
		public Tweet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tweetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tweetID
		{
			get
			{
				return this._tweetID;
			}
			set
			{
				if ((this._tweetID != value))
				{
					this.OntweetIDChanging(value);
					this.SendPropertyChanging();
					this._tweetID = value;
					this.SendPropertyChanged("tweetID");
					this.OntweetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_twitterTweetID", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string twitterTweetID
		{
			get
			{
				return this._twitterTweetID;
			}
			set
			{
				if ((this._twitterTweetID != value))
				{
					this.OntwitterTweetIDChanging(value);
					this.SendPropertyChanging();
					this._twitterTweetID = value;
					this.SendPropertyChanged("twitterTweetID");
					this.OntwitterTweetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tweet", Storage="_tweet1", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string tweet1
		{
			get
			{
				return this._tweet1;
			}
			set
			{
				if ((this._tweet1 != value))
				{
					this.Ontweet1Changing(value);
					this.SendPropertyChanging();
					this._tweet1 = value;
					this.SendPropertyChanged("tweet1");
					this.Ontweet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postDate", DbType="DateTime NOT NULL")]
		public System.DateTime postDate
		{
			get
			{
				return this._postDate;
			}
			set
			{
				if ((this._postDate != value))
				{
					this.OnpostDateChanging(value);
					this.SendPropertyChanging();
					this._postDate = value;
					this.SendPropertyChanged("postDate");
					this.OnpostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_twitterUserID", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string twitterUserID
		{
			get
			{
				return this._twitterUserID;
			}
			set
			{
				if ((this._twitterUserID != value))
				{
					this.OntwitterUserIDChanging(value);
					this.SendPropertyChanging();
					this._twitterUserID = value;
					this.SendPropertyChanged("twitterUserID");
					this.OntwitterUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_screenName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string screenName
		{
			get
			{
				return this._screenName;
			}
			set
			{
				if ((this._screenName != value))
				{
					this.OnscreenNameChanging(value);
					this.SendPropertyChanging();
					this._screenName = value;
					this.SendPropertyChanged("screenName");
					this.OnscreenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profilePhoto", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string profilePhoto
		{
			get
			{
				return this._profilePhoto;
			}
			set
			{
				if ((this._profilePhoto != value))
				{
					this.OnprofilePhotoChanging(value);
					this.SendPropertyChanging();
					this._profilePhoto = value;
					this.SendPropertyChanged("profilePhoto");
					this.OnprofilePhotoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealerTiers")]
	public partial class DealerTier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _tier;
		
		private int _sort;
		
		private EntitySet<MapIcon> _MapIcons;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntierChanging(string value);
    partial void OntierChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    #endregion
		
		public DealerTier()
		{
			this._MapIcons = new EntitySet<MapIcon>(new Action<MapIcon>(this.attach_MapIcons), new Action<MapIcon>(this.detach_MapIcons));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tier", DbType="VarChar(255)")]
		public string tier
		{
			get
			{
				return this._tier;
			}
			set
			{
				if ((this._tier != value))
				{
					this.OntierChanging(value);
					this.SendPropertyChanging();
					this._tier = value;
					this.SendPropertyChanged("tier");
					this.OntierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerTier_MapIcon", Storage="_MapIcons", ThisKey="ID", OtherKey="tier")]
		internal EntitySet<MapIcon> MapIcons
		{
			get
			{
				return this._MapIcons;
			}
			set
			{
				this._MapIcons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DealerTier", Storage="_Customer", ThisKey="ID", OtherKey="tier", IsForeignKey=true)]
		internal Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.DealerTier = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.DealerTier = this;
						this._ID = value.tier;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapIcons(MapIcon entity)
		{
			this.SendPropertyChanging();
			entity.DealerTier = this;
		}
		
		private void detach_MapIcons(MapIcon entity)
		{
			this.SendPropertyChanging();
			entity.DealerTier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapIcons")]
	public partial class MapIcon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _tier;
		
		private int _dealer_type;
		
		private string _mapicon1;
		
		private string _mapiconshadow;
		
		private EntityRef<DealerType> _DealerType;
		
		private EntityRef<DealerTier> _DealerTier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntierChanging(int value);
    partial void OntierChanged();
    partial void Ondealer_typeChanging(int value);
    partial void Ondealer_typeChanged();
    partial void Onmapicon1Changing(string value);
    partial void Onmapicon1Changed();
    partial void OnmapiconshadowChanging(string value);
    partial void OnmapiconshadowChanged();
    #endregion
		
		public MapIcon()
		{
			this._DealerType = default(EntityRef<DealerType>);
			this._DealerTier = default(EntityRef<DealerTier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tier", DbType="Int NOT NULL")]
		public int tier
		{
			get
			{
				return this._tier;
			}
			set
			{
				if ((this._tier != value))
				{
					if (this._DealerTier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntierChanging(value);
					this.SendPropertyChanging();
					this._tier = value;
					this.SendPropertyChanged("tier");
					this.OntierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dealer_type", DbType="Int NOT NULL")]
		public int dealer_type
		{
			get
			{
				return this._dealer_type;
			}
			set
			{
				if ((this._dealer_type != value))
				{
					if (this._DealerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondealer_typeChanging(value);
					this.SendPropertyChanging();
					this._dealer_type = value;
					this.SendPropertyChanged("dealer_type");
					this.Ondealer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mapicon", Storage="_mapicon1", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string mapicon1
		{
			get
			{
				return this._mapicon1;
			}
			set
			{
				if ((this._mapicon1 != value))
				{
					this.Onmapicon1Changing(value);
					this.SendPropertyChanging();
					this._mapicon1 = value;
					this.SendPropertyChanged("mapicon1");
					this.Onmapicon1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mapiconshadow", DbType="VarChar(300) NULL", CanBeNull=false)]
		public string mapiconshadow
		{
			get
			{
				return this._mapiconshadow;
			}
			set
			{
				if ((this._mapiconshadow != value))
				{
					this.OnmapiconshadowChanging(value);
					this.SendPropertyChanging();
					this._mapiconshadow = value;
					this.SendPropertyChanged("mapiconshadow");
					this.OnmapiconshadowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerType_MapIcon", Storage="_DealerType", ThisKey="dealer_type", OtherKey="dealer_type", IsForeignKey=true)]
		internal DealerType DealerType
		{
			get
			{
				return this._DealerType.Entity;
			}
			set
			{
				DealerType previousValue = this._DealerType.Entity;
				if (((previousValue != value) 
							|| (this._DealerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerType.Entity = null;
						previousValue.MapIcons.Remove(this);
					}
					this._DealerType.Entity = value;
					if ((value != null))
					{
						value.MapIcons.Add(this);
						this._dealer_type = value.dealer_type;
					}
					else
					{
						this._dealer_type = default(int);
					}
					this.SendPropertyChanged("DealerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerTier_MapIcon", Storage="_DealerTier", ThisKey="tier", OtherKey="ID", IsForeignKey=true)]
		internal DealerTier DealerTier
		{
			get
			{
				return this._DealerTier.Entity;
			}
			set
			{
				DealerTier previousValue = this._DealerTier.Entity;
				if (((previousValue != value) 
							|| (this._DealerTier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerTier.Entity = null;
						previousValue.MapIcons.Remove(this);
					}
					this._DealerTier.Entity = value;
					if ((value != null))
					{
						value.MapIcons.Add(this);
						this._tier = value.ID;
					}
					else
					{
						this._tier = default(int);
					}
					this.SendPropertyChanged("DealerTier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapPolygon")]
	public partial class MapPolygon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _stateID;
		
		private EntitySet<MapPolygonCoordinate> _MapPolygonCoordinates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    #endregion
		
		public MapPolygon()
		{
			this._MapPolygonCoordinates = new EntitySet<MapPolygonCoordinate>(new Action<MapPolygonCoordinate>(this.attach_MapPolygonCoordinates), new Action<MapPolygonCoordinate>(this.detach_MapPolygonCoordinates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int NOT NULL")]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapPolygon_MapPolygonCoordinate", Storage="_MapPolygonCoordinates", ThisKey="ID", OtherKey="MapPolygonID")]
		public EntitySet<MapPolygonCoordinate> MapPolygonCoordinates
		{
			get
			{
				return this._MapPolygonCoordinates;
			}
			set
			{
				this._MapPolygonCoordinates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapPolygonCoordinates(MapPolygonCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.MapPolygon = this;
		}
		
		private void detach_MapPolygonCoordinates(MapPolygonCoordinate entity)
		{
			this.SendPropertyChanging();
			entity.MapPolygon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapPolygonCoordinates")]
	public partial class MapPolygonCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MapPolygonID;
		
		private double _latitude;
		
		private double _longitude;
		
		private EntityRef<MapPolygon> _MapPolygon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMapPolygonIDChanging(int value);
    partial void OnMapPolygonIDChanged();
    partial void OnlatitudeChanging(double value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(double value);
    partial void OnlongitudeChanged();
    #endregion
		
		public MapPolygonCoordinate()
		{
			this._MapPolygon = default(EntityRef<MapPolygon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapPolygonID", DbType="Int NOT NULL")]
		public int MapPolygonID
		{
			get
			{
				return this._MapPolygonID;
			}
			set
			{
				if ((this._MapPolygonID != value))
				{
					if (this._MapPolygon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapPolygonIDChanging(value);
					this.SendPropertyChanging();
					this._MapPolygonID = value;
					this.SendPropertyChanged("MapPolygonID");
					this.OnMapPolygonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float NOT NULL")]
		public double latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float NOT NULL")]
		public double longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapPolygon_MapPolygonCoordinate", Storage="_MapPolygon", ThisKey="MapPolygonID", OtherKey="ID", IsForeignKey=true)]
		internal MapPolygon MapPolygon
		{
			get
			{
				return this._MapPolygon.Entity;
			}
			set
			{
				MapPolygon previousValue = this._MapPolygon.Entity;
				if (((previousValue != value) 
							|| (this._MapPolygon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapPolygon.Entity = null;
						previousValue.MapPolygonCoordinates.Remove(this);
					}
					this._MapPolygon.Entity = value;
					if ((value != null))
					{
						value.MapPolygonCoordinates.Add(this);
						this._MapPolygonID = value.ID;
					}
					else
					{
						this._MapPolygonID = default(int);
					}
					this.SendPropertyChanged("MapPolygon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
